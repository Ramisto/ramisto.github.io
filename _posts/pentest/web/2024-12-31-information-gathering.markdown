---
layout: post
title:  "Information Gathering"
categories: Pentest Web
---

# Information Gathering

If you want to rob a bank, are you going to rush in head first without any information and without preparation? What will be your chances of succeeding in your heist?

It is the same for the information gathering, this step is the most important in the context of a penetration test, it will determine your ability to find security weaknesses in the next phases of the test.

To put it simply, the more relevant information you find during this phase, the greater your chances of finding security weaknesses, so do not hesitate to take your time to accomplish this task.

## Objectives

- Enumerate the applications within the scope that exist on a web server.
- Determine the frameworks version and type of a running web server.
- Identify hidden or obfuscated paths and functionality through the analysis of metadata files.
- Search sensitive data exposure.

## How to test ?

### A. Enumerate applications on WebServer

```
nmap –Pn –sT –sV –p0-65535 <IP> # non-standard ports 
python sublist3r.py -d example.com # other subdomains
ffuf -w /path/to/dico -u https://www.example.com/FFUF # directory listings
```

### B. Identify files for web crawlers

Use curl for rewiew metafiles :

```
curl https://www.example.com/robots.txt
curl https://www.example.com/sitemap.xml
curl https://www.example.com/.well-known/security.txt
curl https://www.example.com/humans.txt
```

### C. Version control history

Sometimes web applications expose the .git directory by default, this is used to store version control system data (usually git):

```
curl https://www.example.com/.git
```

### D. Determine frameworks version and type of web server

Use curl :

```
curl -I https://www.example.com
```

Send malformed request with Burp Suite repeater for review error messages :

```
GET / SANTA CLAUS/1.1
```

Use Wappalyzer browser extension for identify frameworks version.

### E. Analyze the source code


Please check whether sensitive information is exposed in the following:

```
- Comments <!-- ... -->
- META tags <META...>
- JavaScript code <script>...</script>
```

## Inspired by

- [OWASP WSTG - Information Gathering](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/01-Information_Gathering/)
- [PortSwigger - Information Disclosure](https://portswigger.net/web-security/information-disclosure)
- [Academy HackTheBox - Bug Bounty Hunter job role path](https://academy.hackthebox.com/paths/jobrole)

## Tools

- [Nmap](https://nmap.org/book/man.html)
- [Sublist3r](https://github.com/aboul3la/Sublist3r)
- [ffuf](https://github.com/ffuf/ffuf)
- [Curl](https://curl.se/docs/manpage.html)
- [Wappalyzer](https://chromewebstore.google.com/detail/wappalyzer-technology-pro/gppongmhjkpfnbhagpmjfkannfbllamg?hl=fr)
- [BurpSuite](https://portswigger.net/burp/communitydownload)
